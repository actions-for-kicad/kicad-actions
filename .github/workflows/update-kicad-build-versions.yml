name: Check for new KiCad versions

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  check-kicad-versions:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Fetch KiCad versions
        id: fetch_versions
        run: |
          pip install requests packaging
          python <<EOF
          import requests
          import re
          import os
          from packaging.version import Version

          url = 'https://hub.docker.com/v2/repositories/kicad/kicad/tags?page_size=100'
          response = requests.get(url).json()
          tags = [tag['name'] for tag in response['results']]

          valid_versions = sorted(
              [t for t in tags if re.fullmatch(r'\d+\.\d+\.\d+', t) and not t.startswith("8")],
              key=Version
          )

          with open("versions.txt", "w") as f:
              for v in valid_versions:
                  f.write(v + "\n")
          EOF

      - name: Compare and filter missing versions
        id: check_missing
        run: |
          existing_versions=$(grep -oP '"\K\d+\.\d+\.\d+(?=")' .github/workflows/build-kicad-versions.yml | sort)
          missing_versions=()

          while read -r version; do
            if ! grep -q "\"$version\"" .github/workflows/build-kicad-versions.yml; then
              missing_versions+=("$version")
            fi
          done < versions.txt

          if [ ${#missing_versions[@]} -eq 0 ]; then
            echo "No new versions to add"
            echo "update_needed=false" >> $GITHUB_OUTPUT
          else
            echo "New versions to add: ${missing_versions[*]}"
            echo "update_needed=true" >> $GITHUB_OUTPUT
            echo "${missing_versions[@]}" > new_versions.txt
          fi

      - name: Create branch and pull request
        if: steps.check_missing.outputs.update_needed == 'true'
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          BRANCH_NAME="add-kicad-versions-$(date +%s)"
          git checkout -b "$BRANCH_NAME"

          for version in $(cat new_versions.txt); do
            sed -i "/kicad_version:/,/]/ s/]/, \"${version}\"]/" .github/workflows/build-kicad-versions.yml
          done

          git add .github/workflows/build-kicad-versions.yml
          git commit -m "Add new KiCad versions to matrix"
          git push origin "$BRANCH_NAME"

          gh pr create \
            --title "Add new KiCad versions to matrix" \
            --body "Automatically add the following KiCad versions: $(cat new_versions.txt | tr '\n' ' ')" \
            --base main \
            --head "$BRANCH_NAME" \
            --reviewer Nick-v-L
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

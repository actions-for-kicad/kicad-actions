name: Check for new KiCad versions

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  check-kicad-versions:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch current KiCad versions from repo
        id: repo_versions
        run: |
          versions=$(grep -oP '(?<=kicad_version:\s*\[)[^]]+' .github/workflows/build-kicad-versions.yml | tr -d '" ' | tr ',' '\n')
          echo "$versions" > repo_versions.txt

      - name: Fetch Docker tags and filter
        id: docker_versions
        run: |
          curl -s "https://hub.docker.com/v2/repositories/kicad/kicad/tags?page_size=100" \
          | jq -r '.results[].name' \
          | grep -E '^[0-9]+\.[0-9]+(\.[0-9]+)?$' \
          | awk -F. '$1 >= 8' \
          | sort -Vr > docker_versions.txt

      - name: Compare versions and find new ones
        id: compare
        run: |
          missing=$(comm -23 <(sort docker_versions.txt) <(sort repo_versions.txt))
          echo "$missing" > missing_versions.txt
          echo "Missing versions:"
          cat missing_versions.txt

      - name: Create GitHub issue if new versions found
        if: success() && steps.compare.outputs.missing != ''
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -s missing_versions.txt ]; then
            body="New KiCad Docker version(s) are available:\n\n\`\`\`\n$(cat missing_versions.txt)\n\`\`\`\n\nPlease update the \`kicad_version\` array in \`.github/workflows/build-kicad-versions.yml\` accordingly."
            gh issue create --title "New KiCad version(s) detected" \
                            --body "$body" \
                            --label "update,automation"
          fi

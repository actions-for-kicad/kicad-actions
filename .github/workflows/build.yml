name: Auto Update and Release KiCad Versions

on:
  push:
    tags:
      - "v[0-9]*.[0-9]*"

jobs:
  update-dockerfile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        kicad_version: ["8.0", "9.0"]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Extract Version from tag and create branch name
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          echo "ACTION_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          echo "BRANCH_NAME=release-k${{ matrix.kicad_version }}" >> $GITHUB_ENV

      - name: Create a new branch for KiCad ${{ matrix.kicad_version }}
        run: |
          git checkout -b ${{ env.BRANCH_NAME }}

      - name: Update Dockerfile with KiCad Version ${{ matrix.kicad_version }}
        run: |
          # Checkout the release branch (if not already on it)
          git checkout -b ${{ env.BRANCH_NAME }} || git checkout ${{ env.BRANCH_NAME }}

          git fetch origin
          git reset --hard origin/v${{ env.ACTION_VERSION }}

          # Update Dockerfile with the appropriate KiCad version
          sed -i 's|FROM kicad/kicad:.*|FROM kicad/kicad:${{ matrix.kicad_version }}|' Dockerfile

          # Check if there are changes in the Dockerfile
          if git diff --exit-code Dockerfile; then
              echo "No changes to Dockerfile, skipping commit."
          else
              git add Dockerfile
              git commit -m "Update Dockerfile for KiCad ${{ matrix.kicad_version }}"

              # Force push the changes, setting upstream
              git push origin ${{ env.BRANCH_NAME }} --force
          fi

      - name: Create Git Tag and Release
        run: |
          TAG="v${{ env.ACTION_VERSION }}-k${{ matrix.kicad_version }}"
          git tag $TAG
          git push origin $TAG
          gh release create $TAG --title "v${{ env.ACTION_VERSION }}-k${{ matrix.kicad_version }}"
        env:
          GH_TOKEN: ${{ github.token }}
